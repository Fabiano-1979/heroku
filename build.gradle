plugins {
  id 'com.gradle.plugin-publish' version '0.9.9'
  id 'com.jfrog.bintray' version '1.5'

  id 'eclipse'
  id 'groovy'
  id 'idea'
  id 'maven-publish'
}

task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

repositories {
  jcenter()
  mavenCentral()
}

dependencies {
  compile 'com.heroku.sdk:heroku-deploy:2.0.2'
  compile 'com.google.guava:guava:18.0'
  compile gradleApi()

  testCompile gradleTestKit()
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
    exclude module: 'groovy-all'
  }
  testCompile files(createClasspathManifest)
}

group = 'com.heroku.sdk'
version = "1.0.1"

task sourceJar(type: Jar) {
  from sourceSets.main.allSource
  classifier 'sources'
}

publishing {
  publications {
    bintray(MavenPublication) {
      from components.java
      artifact(sourceJar)
      artifact(publishPluginJavaDocsJar)
    }
  }
}

bintray {
  user = System.env.BINTRAY_USER
  key = System.env.BINTRAY_KEY
  publish = true
  pkg {
    repo = 'maven'
    name = 'gradle'
    userOrg = 'heroku'
    licenses = ['MIT']
    publications = ['bintray']
  }
}

bintrayUpload.dependsOn 'generatePomFileForBintrayPublication', 'sourceJar', 'build'

bintrayUpload.onlyIf {
  System.env.BINTRAY_USER && System.env.BINTRAY_KEY && project.version ==~ /\d+\.\d+\.\d+/
}

pluginBundle {
  website = 'https://github.com/heroku/heroku-gradle'
  vcsUrl = 'https://github.com/heroku/heroku-gradle'
  description = 'A Gradle plugin for deploying to Heroku.'
  tags = ['heroku', 'deployment']

  plugins {
    herokuPlugin {
      id = 'com.heroku.sdk.heroku-gradle'
      displayName = 'Heroku Gradle'
    }
  }
}

publishPlugins.onlyIf {
  project.version ==~ /\d+\.\d+\.\d+/
}
